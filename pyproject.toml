[tool.poetry]
name = "ds-my-rest-api"
version = "1.0.0-dev"
description = "REST API service for the My Project"
authors = ["Daryl Stark <daryl@dstark.nl>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "my_rest_api", from = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.109.0"
uvicorn = "^0.25.0"
pydantic-settings = "^2.1.0"
ds-my-data = "1.2.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-sugar = "^0.9.7"
mypy = "^1.5.1"
bumpver = "^2023.1126"
toml = "^0.10.2"
httpx = "^0.26.0"
pytest-env = "^1.1.3"
ds-my-multitool = "^1.0.5"
ruff = "^0.2.2"
pre-commit = "^3.6.2"

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
sphinx = "^6.2.1"
sphinx-rtd-theme = "^1.2.2"
sphinxcontrib-mermaid = "^0.9.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.bumpver]
current_version = "1.0.0-dev"
version_pattern = "MAJOR.MINOR.PATCH[-TAG]"
commit_message = "Version {new_version}"
commit = true
tag = false
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"src/my_rest_api/__init__.py" = ["{version}"]
"docs/source/conf.py" = ["release = '{version}'"]

[tool.pytest.ini_options]
addopts = ['--cov=my_rest_api', '--cov-report=html', '--cov-report=lcov']
env = [
    "MY_REST_API_DATABASE_STR=sqlite:////tmp/my_rest_api.pytest.db"
]

[tool.ruff]
line-length = 79

[tool.ruff.lint]
exclude = ["docs/*.py"]
select = [
    "E",   # pycodestyle (errors)
    "W",   # pycodestyle (warnings)
    "PL",  # pylint
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "LOG", # flake8-logging
    "Q",   # flake8-quotes
    "ANN", # flak8-annotations
    "ICN", # flake8-import-conventions
    "SLF", # flake8-self
    "TD",  # flake8-todo
    "FIX", # flake8-fixme
    "D",   # pydocstyle
    "F",   # Pyflakes
    "UP",  # pyupgrade
    "I",   # isort
    "N",   # pep8-naming
]
ignore = [
    "B008",      # function call in default argument
    "PLR2004",   # magic value used in comparison
    "ANN101",    # missing type annotation for self
    "ANN102",    # missing type annotation for cls
    "TD003",     # missing link
    "TD002",     # missing author
    "PLR0913",   # too many arguments
    "FIX002",    # fixme found - skipped for now
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = 'single'
multiline-quotes = 'double'

[tool.ruff.format]
quote-style = 'single'
indent-style = 'space'
docstring-code-format = true
exclude = ["docs/*.py"]
